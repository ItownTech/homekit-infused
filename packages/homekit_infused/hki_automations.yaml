automation:
# State Change Automations used for device counting
  - alias: All States Change
    id: 'StaesChanged'
    trigger:
      - platform: event
        event_type: state_changed
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ trigger.event.data.new_state is defined }}"
        - condition: or
          conditions:
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_light_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_device_switch_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_climate_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_binary_sensor_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_detector_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_binary_sensors','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_motion_sensor_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_door_sensor_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_window_sensor_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_cover_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_garage_door_entities','entity_id') }}"
            - condition: template
              value_template: "{{ trigger.event.data.entity_id in state_attr('group.all_fan_entities','entity_id') }}"
    action:
      - service: homeassistant.update_entity  
        entity_id:      
          - sensor.current_lights_on
          - sensor.current_devices_on
          - sensor.current_climate_entities_on
          - sensor.current_binary_sensors_on
          - sensor.current_detectors_on
          - sensor.current_motion_sensors_on
          - sensor.current_doors_open
          - sensor.current_windows_open
          - sensor.current_covers_open
          - sensor.current_garage_doors_open
          - sensor.current_fans_on

# Theme Selector
  - alias: 'themes'
    initial_state: 'true'
    trigger:
      - platform: state
        entity_id: input_boolean.day_night_cycle
      - platform: state
        entity_id: input_select.theme_selector
      - platform: state
        entity_id: input_select.theme_selector_day
      - platform: state
        entity_id: input_select.theme_selector_night
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: sun.sun
    action:
      - service: frontend.set_theme
        data_template:
          name: >
            {% if (is_state('sun.sun', 'above_horizon')) and (is_state('input_boolean.day_night_cycle', 'on'))  %}
              {{ states('input_select.theme_selector_day') }}
            {% elif (is_state('sun.sun', 'below_horizon')) and (is_state('input_boolean.day_night_cycle', 'on'))  %}
              {{ states('input_select.theme_selector_night') }}
            {% else %}
              {{ states('input_select.theme_selector') }}
            {% endif %}
